{"version":3,"sources":["assets/images/AddIcon.svg","assets/images/RemoveIcon.svg","assets/images/finishOrder.svg","components/CartProducts/styles.js","components/CartProducts/SvgEmptyLogo.js","components/ListProducts/style.js","components/ListProducts/ItemProduct/style.js","components/ListProducts/ItemProduct/index.js","components/ListProducts/index.js","components/CartProducts/index.js","components/InputSearch/style.js","components/InputSearch/index.js","components/CostDelevery/style.js","components/CostDelevery/index.js","components/DateOrder/SvgCar.js","components/DateOrder/style.js","components/DateOrder/index.js","components/InputSendOrder/style.js","components/Loading/index.js","components/InputSendOrder/index.js","pages/Home/index.js","pages/FinishOrder/index.js","style/GlobalStyled.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ContainerCartProduct","styled","div","Empty","SvgEmptyIcon","props","width","viewBox","fill","xmlns","d","List","ul","ItemList","li","ProductData","ImageContainer","AddButtonProduct","button","AddRemove","ItemProduct","state","showMiniModal","count","saveLocalStorage","productsCount","obj","Object","assign","product","productId","id","localStorage","setItem","JSON","stringify","handleClickOutside","event","domNode","ReactDOM","findDOMNode","contains","target","setState","handleClickAddRemove","setProductId","add","parseInt","countProducts","setCountProducts","handleFirstAdd","setShowAddProducts","pCount","BtnAddDelete","className","onClick","src","AddIcon","alt","handleInputCount","e","inputCound","validity","valid","value","console","log","removeItem","subtract","num","addRemoveProducts","RemoveIcon","type","pattern","onChange","document","addEventListener","this","removeEventListener","ref","img","height","name","price","React","Component","ListProducts","products","map","key","showAddProducts","CartProduct","tempProduct","undefined","length","SvgEmptyLogo","Container","SearchInput","input","InputSearch","inputSeachChange","productName","placeholder","ListContainer","Item","shippingCost","css","last","minCost","CostDelevery","getItem","shipping","allshipping","taxes","total","parse","parseFloat","toFixed","costs","SvgCar","DeleveryDate","span","DateOrder","format","today","Date","tomorrow","setDate","getDate","getTomorrowDate","Button","desebled","Loading","ADD_ORDER","gql","InputSendOrder","productsCost","deleveryDate","useMutation","CreateOrderProduct","loading","disabledBtn","a","variables","res","data","navigate","createOrderProduct","orderProduct","error","moment","Home","useState","setProductName","dataProduct","FIND_PRODUCTS","useQuery","findProducts","localProduct","productCount","message","FinishOrder","order","to","replace","IMG_FINISH_ORDER","GlobalStyle","createGlobalStyle","RouteContainer","posed","enter","opacity","delay","beforeChildren","exit","PosedRouter","children","location","App","path","Boolean","window","hostname","match","client","ApolloClient","uri","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,ouBCEpC,IAAMC,EAAuBC,IAAOC,IAAV,KAMnBC,EAAQF,IAAOC,IAAV,KCEJE,EARM,SAAAC,GAAK,OACtB,uCAAKC,MAAO,IAASD,EAArB,CAA4BE,QAAQ,YAAYC,KAAK,OAAOC,MAAM,+BAC9D,0BAAMC,EAAE,iwCAAiwCF,KAAK,YAC9wC,0BAAME,EAAE,oEAAoEF,KAAK,c,8GCHlF,IAAMG,EAAOV,IAAOW,GAAV,K,82DCAV,IAAMC,EAAWZ,IAAOa,GAAV,KAORC,EAAcd,IAAOC,IAAV,KAgBXc,EAAiBf,IAAOC,IAAV,KAIde,EAAmBhB,IAAOiB,OAAV,KAahBC,EAAYlB,IAAOC,IAAV,IADF,W,kCC7BPkB,EAAb,YAEI,WAAYf,GAAQ,IAAD,8BACf,4CAAMA,KAGVgB,MAAQ,CACJC,eAAe,EACfC,MAAO,GANQ,EASnBC,iBAAmB,SAACC,GAEhB,IAAMC,EAAMC,OAAOC,OAAO,EAAKvB,MAAMwB,QAAQ,CACzCC,UAAW,EAAKzB,MAAMwB,QAAQE,GAC9BN,kBAGJO,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUT,KAhBxC,EA4BnBU,mBAAqB,SAAAC,GAEjB,IAAMC,EAAUC,IAASC,YAAT,gBAEXF,GAAYA,EAAQG,SAASJ,EAAMK,SACpC,EAAKC,SAAS,CACVrB,eAAe,KAlCR,EA0CnBsB,qBAAuB,WAEnB,EAAKvC,MAAMwC,aAAa,EAAKxC,MAAMwB,QAAQE,IAC3C,IAAMe,EAAMC,SAAS,EAAK1C,MAAM2C,eAAiB,EACjD,EAAK3C,MAAM4C,iBAAiBH,GAC5B,EAAKtB,iBAAiBsB,IA/CP,EAkDnBI,eAAiB,WAEb,EAAK7C,MAAMwC,aAAa,EAAKxC,MAAMwB,QAAQE,IAC3C,EAAK1B,MAAM8C,oBAAmB,GAC9B,IAAML,EAAMC,SAAS,EAAK1C,MAAM2C,eAAiB,EAE7CI,EAAS,EAAK/B,MAAME,MAAQ,EAEhC,EAAKoB,SAAS,CACXrB,eAAe,EACfC,MAAO6B,IAGV,EAAK/C,MAAM4C,iBAAiBH,GAC5B,EAAKtB,iBAAiBsB,IAhEP,EAmEnBO,aAAe,WAEX,OACI,yBAAKC,UAAU,yCAEa,GAApB,EAAKjC,MAAME,MACL,kBAACN,EAAD,CAAkBsC,QAAS,EAAKL,gBAC9B,yBAAKM,IAAKC,IAASnD,MAAO,GAAIoD,IAAI,MAEpC,kBAACzC,EAAD,CAAkBsC,QAAS,kBAAM,EAAKZ,SAAS,CAAErB,eAAe,MAC7D,EAAKjB,MAAM2C,eAIF,GAApB,EAAK3B,MAAME,MACP,yCACA,OAnFC,EAyFnBoC,iBAAmB,SAACC,GAChB,IAAIC,EAAcD,EAAElB,OAAOoB,SAASC,MAASH,EAAElB,OAAOsB,MAAQ,EACzC,IAAlBJ,EAAElB,OAAOsB,QAAaH,EAAa,GACtC,EAAKxD,MAAMwC,aAAa,EAAKxC,MAAMwB,QAAQE,IAC3CkC,QAAQC,IAAIL,GACZ,EAAKxD,MAAM4C,iBAAiBY,GACV,GAAdA,EAIJ,EAAKrC,iBAAiBqC,GAHlB7B,aAAamC,WAAW,oBAhGb,EAsGnBC,SAAW,WAGP,GADA,EAAK/D,MAAMwC,aAAa,EAAKxC,MAAMwB,QAAQE,IACX,GAA5B,EAAK1B,MAAM2C,cAAf,CAIA,IAAIqB,EAAMtB,SAAS,EAAK1C,MAAM2C,eAAiB,EAG/C,OAFA,EAAK3C,MAAM4C,iBAAiBoB,GAC5B,EAAK7C,iBAAiB6C,GACX,GAAPA,GAEArC,aAAamC,WAAW,wBAExB,EAAKxB,SAAS,CACVpB,MAAO,UALf,IAhHe,EA4HnBuB,IAAM,WAEF,EAAKzC,MAAMwC,aAAa,EAAKxC,MAAMwB,QAAQE,IAC3C,IAAIsC,EAAMtB,SAAS,EAAK1C,MAAM2C,eAAiB,EAC/C,EAAK3C,MAAM4C,iBAAiBoB,GAC5B,EAAK7C,iBAAiB6C,IAjIP,EAoInBC,kBAAoB,WAChB,OACI,kBAACnD,EAAD,KACI,yBAAKmC,UAAU,yCACX,iCACI,4BAAQC,QAAU,EAAKa,UACnB,yBAAKZ,IAAKe,IAAYjE,MAAO,GAAIoD,IAAI,MAEzC,2BAAOc,KAAK,OAAOC,QAAQ,SAASC,SAAU,EAAKf,iBAAkBK,MAAkC,EAA3B,EAAK3D,MAAM2C,gBACvF,4BAAQO,QAAU,EAAKT,KACnB,yBAAKU,IAAKC,IAASnD,MAAO,GAAIoD,IAAI,OAG1C,2BAAOJ,UAAU,QAAjB,aAjJG,EAFvB,iFAwBQqB,SAASC,iBAAiB,QAASC,KAAKzC,oBAAoB,KAxBpE,6CA4BQuC,SAASG,oBAAoB,QAASD,KAAKzC,oBAAoB,KA5BvE,+BA4JQ,IAAMP,EAAUgD,KAAKxE,MAAMwB,QAE3B,OACI,kBAAChB,EAAD,CAAUkE,IAAI,QACV,yBAAKzB,UAAU,SACX,kBAACtC,EAAD,CAAgBsC,UAAU,OACtB,yBAAKE,IAAK3B,EAAQmD,IAAK1E,MAAO,OAAW2E,OAAS,OAAUvB,IAAI,OAGxE,kBAAC3C,EAAD,CAAauC,UAAU,SACnB,2BAAIzB,EAAQqD,MACZ,kCAAQrD,EAAQsD,QAEpB,yBAAK7B,UAAU,mCACTuB,KAAKxB,gBAEVwB,KAAKxD,MAAMC,cAAgBuD,KAAKP,oBAAsB,UA5KvE,GAAiCc,IAAMC,WCP1BC,EAAe,SAAAjF,GAkBxB,OACI,6BACI,kBAACM,EAAD,KAjBGN,EAAMkF,SAASC,KAAK,SAAA3D,GACvB,OACI,kBAAC,EAAD,CAAaA,QAAUA,EAAU4D,IAAM5D,EAAQE,GACvC2D,gBAAkBrF,EAAMqF,gBACxBvC,mBAAsB9C,EAAM8C,mBAC5BH,cAAgB3C,EAAM2C,cACtBC,iBAAmB5C,EAAM4C,iBACzBnB,UAAYzB,EAAMyB,UAClBe,aAAexC,EAAMwC,qBCItC,IAAM8C,EAAc,SAAAtF,GACvB4D,QAAQC,IAAI7D,EAAMkF,UAClB,IAAIK,EAAc,GAOlB,OALIA,OADmBC,IAAnBxF,EAAMkF,SACQ,GAEAlF,EAAMkF,SAIpB,kBAACvF,EAAD,KACS4F,EAAYE,OAEX,kBAAC,EAAD,CAAcP,SAAWlF,EAAMkF,SACjCG,gBAAkBrF,EAAMqF,gBACxBvC,mBAAsB9C,EAAM8C,mBAC5BH,cAAgB3C,EAAM2C,cACtBC,iBAAmB5C,EAAM4C,iBACzBnB,UAAYzB,EAAMyB,UAClBe,aAAexC,EAAMwC,eA/B7B,kBAAC1C,EAAD,KACI,kBAAC4F,EAAD,CAAczC,UAAU,SACxB,kDACA,8E,4UCTL,IAAM0C,EAAY/F,IAAOC,IAAV,KAIT+F,EAAchG,IAAOiG,MAAV,KCHXC,EAAc,SAAC9F,GAGxB,OACI,kBAAC2F,EAAD,KACI,kBAACC,EAAD,CAAazB,KAAK,OACjBE,SAAW,SAACd,GAAD,OAAOvD,EAAM+F,iBAAiBxC,EAAElB,OAAOsB,QAClDA,MAAQ3D,EAAMgG,YAEdC,YAAc,sB,64BCVpB,IAAMN,GAAY/F,IAAOC,IAAV,MAGTqG,GAAgBtG,IAAOW,GAAV,MAMb4F,GAAOvG,IAAOa,GAAV,MAMb,SAAAT,GAAK,OAAIA,EAAMoG,cAAgBC,YAAtB,SAQT,SAAArG,GAAK,OAAIA,EAAMsG,MAAQD,YAAd,QAST,SAAArG,GAAK,OAAIA,EAAMuG,SAAWF,YAAjB,QChCAG,GAAe,SAACxG,GAIzB,IAJmC,EAIrB,WACV,IAAIwB,EAAUG,aAAa8E,QAAQ,mBAC/BC,EAAW,OACXC,EAAc,OACdC,EAAQ,OACRC,EAAQ,OAgBZ,OAdIrF,IACAA,EAAUK,KAAKiF,MAAMtF,GAErBkF,EAAWK,WAAWvF,EAAQsD,OAAuC,GAA5BiC,WAAWvF,EAAQsD,OAI5D8B,GAAuB,KADvBD,IAFAD,EAAYlF,EAAQJ,cAAgBsF,EAASM,QAAQ,GAAI,GAE9BxF,EAAQJ,eAAe4F,QAAQ,KAC7BA,QAAQ,GACrCH,GAASE,WAAWJ,GAAeI,WAAWH,IAASI,QAAQ,IAM5D,CACHN,WACAC,cACAC,QACAC,SAIsCI,GAAxCP,EAjC6B,EAiC7BA,SAAUC,EAjCmB,EAiCnBA,YAAaC,EAjCM,EAiCNA,MAAOC,EAjCD,EAiCCA,MAEpC,OACI,kBAAC,GAAD,KACI,kBAACX,GAAD,KACI,kBAACC,GAAD,iBAAe,kCAASQ,GAAxB,KACA,kBAACR,GAAD,CAAMC,cAAe,GAArB,iBAA2C,kCAASM,GAAY,GAAhE,KACA,kBAACP,GAAD,cAAY,kCAASS,GAArB,KACA,kBAACT,GAAD,CAAMG,MAAI,EAACC,SAAO,GAAlB,SAAyB,kCAASM,GAAlC,QClCDK,GAPA,SAAAlH,GAAK,OAChB,uCAAKC,MAAQ,GAAK2E,OAAS,IAAS5E,EAApC,CAA2CE,QAAQ,YAAYC,KAAK,OAAOC,MAAM,+BAC7E,0BAAMC,EAAE,kZAAkZF,KAAK,YAC/Z,0BAAME,EAAE,8vBAA8vBF,KAAK,c,uPCH5wB,IAAMwF,GAAY/F,IAAOC,IAAV,MAKTsH,GAAevH,IAAOwH,KAAV,M,oBCFZC,GAAY,WAQrB,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAQpE,UAAU,SAClB,wDAFJ,QAGI,kBAACkE,GAAD,KACI,kBAAC,KAAD,CAAQG,OAAO,YAX3B,WACI,IAAMC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KAAKD,GAC3B,OAAOE,EAASC,QAAQD,EAASE,UAAY,GAS9BC,O,mzBCjBf,IAAMC,GAASjI,IAAOiB,OAAV,MAmBf,SAAAb,GAAK,OAAIA,EAAM8H,UAAYzB,YAAlB,SCjBA0B,I,MAAU,kBACnB,yBAAK9E,UAAU,a,wZCInB,IAAM+E,GAAYC,IAAH,MAeFC,GAAkB,SAAAlI,GAE3B,SAASiH,IACL,IAAIzF,EAAUG,aAAa8E,QAAQ,mBAE/BL,EAAe,EACfQ,EAAQ,EACPC,EAAQ,EAETzF,EAAiB,EACjB+G,EAAe,EACf1G,EAAY,KA6BhB,OA1BCmC,QAAQC,IAAI,QAAQrC,GAEjBA,IAGAJ,GADAI,EAAUK,KAAKiF,MAAMtF,IACIJ,cACzBK,EAAYiB,SAASlB,EAAQC,WAE7B2E,EAAeW,WAAWvF,EAAQsD,OAAsC,GAA5BiC,WAAWvF,EAAQsD,OAI/D8B,GAAyB,KADzBuB,IAFA/B,EAAgBW,WAAWvF,EAAQJ,eAAiBgF,EAAaY,QAAQ,GAAK,GAE/CD,WAAWvF,EAAQJ,gBAAgB4F,QAAQ,KAC1CA,QAAQ,GACxCH,GAAUE,WAAWoB,GAAkBpB,WAAWH,IAAWI,QAAQ,IAEvD,CAEd5F,cAAeA,EACf+G,aAAepB,WAAWoB,GAC1B/B,aAAcW,WAAWX,GACzBQ,MAAOG,WAAWH,GAClBC,MAAOE,WAAWF,GAClBpF,UAAWA,EACX2G,aAzBe,cAZa,MA4COC,YAAYL,IA5CnB,mBA4C7BM,EA5C6B,KA4CPC,EA5CO,KA4CPA,QACvB1B,GAAUI,EAASA,KAAnBJ,MAEF2B,GAAc,EA/CkB,8CAoDpC,6BAAAC,EAAA,2DACQ5B,GAAS,IADjB,iEAMQI,EAAMmB,aAAeR,IAN7B,SAQ0BU,EACd,CAAEI,UAAY,CAAE7C,MAAOoB,KATnC,cAQc0B,EARd,OAWQ/E,QAAQC,IAAI8E,EAAIC,MAEhBjH,aAAamC,WAAW,mBAbhC,kBAce+E,YAAS,gBAAD,OAAkBF,EAAIC,KAAKE,mBAAmBC,gBAdrE,kCAiBQnF,QAAQoF,MAAR,MAjBR,2DApDoC,sBAgDhCnC,GAAS,KACT2B,GAAc,GAwBlB,IAAMZ,EAAkB,WACpB,IAAIL,EAAQ,IAAIC,KACZC,EAAW,IAAID,KAAKD,GAGxB,OAFAE,EAAWA,EAASC,QAAQD,EAASE,UAAY,GACjDF,EAAWwB,KAAOxB,GAAUH,OAAO,eAIvC,OACI,6BACI,kBAACO,GAAD,CAAQC,SAAUU,EAAatF,QAnFH,4CAmF5B,kBAGGqF,EAAU,kBAAC,GAAD,MAAa,O,iRCjG/B,IAAMW,GAAO,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACfnD,EADe,KACFoD,EADE,OAEkBD,mBAAS,GAF3B,mBAEjBxG,EAFiB,KAEFC,EAFE,OAGwBuG,oBAAS,GAHjC,mBAGf9D,EAHe,KAGEvC,EAHF,OAIYqG,mBAAS,MAJrB,mBAIf1H,EAJe,KAIJe,EAJI,OAKU2G,mBAAS,IALnB,mBAOlBE,GAPkB,UAOJ,IAKZC,EAAgBrB,IAAH,MAZG,EAuBSsB,YAASD,EAAe,CAAEZ,UAAW,CAAE7D,KAAMmB,KAAtEuC,EAvBgB,EAuBhBA,QAASS,EAvBO,EAuBPA,MAAOJ,EAvBA,EAuBAA,KAEP,GAAXL,IACAc,EAAcT,EAAKY,cAGvB,IAAIC,EAAe9H,aAAa8E,QAAQ,mBAGxC,GAAIgD,EAAc,CAId,GAAiC,IAFjCA,EAAe5H,KAAKiF,MAAM2C,IAETC,aACb,OAGJL,EAAc,CAACI,GAanB,OAAIT,EAAa,UAAN,OAAiBA,EAAMW,SAI9B,yBAAK1G,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAa8C,iBAhBjC,SAA0BlB,GACtBuE,EAAevE,IAekDmB,YAAaA,KAElE,yBAAK/C,UAAU,WAEnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAENsF,EAUC,kBAAC,GAAD,MARF,kBAAC,EAAD,CAAarD,SAAUmE,EACnBhE,gBAAiBA,EACjBvC,mBAAoBA,EACpBH,cAAeA,EACfC,iBAAkBA,EAClBnB,UAAWA,EACXe,aAAcA,KAK1B,yBAAKS,UAAU,SACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,QACX,kBAAC,GAAD,CACIN,cAAeA,EACfC,iBAAkBA,EAClBnB,UAAWA,EACXe,aAAcA,EACd0C,SAAUmE,KAGlB,kBAAC,GAAD,W,oBCpGXO,GAAc,SAAC5J,GAAD,OAEvB,yBAAKiD,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,0EACX,wBAAIA,UAAU,QAAd,aACA,0BAAMA,UAAU,QAAhB,cAAkC,gCAAUjD,EAAM6J,OAAlD,yBACA,kBAAC,IAAD,CAAMC,GAAG,IAAIC,SAAU,GAAvB,sBACA,yBAAK9G,UAAU,QACX,yBAAKE,IAAM6G,KAAmB/J,MAAO,MAAU2E,OAAQ,MAAUvB,IAAI,6B,sOCbtF,IAAM4G,GAAcC,YAAH,MCMlBC,GAAiBC,IAAMvK,IAAI,CAC/BwK,MAAO,CAAEC,QAAS,EAAGC,MAAO,IAAKC,eAAgB,KACjDC,KAAM,CAAEH,QAAS,KAIbI,GAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAClB,kBAAC,IAAD,MACG,gBAAGC,EAAH,EAAGA,SAAH,OACC,kBAAC,IAAD,KACE,kBAACT,GAAD,CAAgB/E,IAAKwF,EAASxF,KAC5B,kBAAC,IAAD,CAAQwF,SAAUA,GAAWD,SAmBxBE,GAZH,WACV,OACE,kBAAC,WAAD,KACI,kBAACZ,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAMa,KAAK,MACX,kBAAC,GAAD,CAAaA,KAAK,2BCpBRC,QACW,cAA7BC,OAAOJ,SAASK,UAEe,UAA7BD,OAAOJ,SAASK,UAEhBD,OAAOJ,SAASK,SAASC,MACvB,2DCVN,IAAMC,GAAS,IAAIC,IAAa,CAE5BC,IAAK,sDAGTnJ,IAASoJ,OACL,kBAAC,IAAD,CAAgBH,OAASA,IACrB,kBAAC,GAAD,OAGN7G,SAASiH,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c964a86a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AddIcon.f856d54b.svg\";","module.exports = __webpack_public_path__ + \"static/media/RemoveIcon.74e64688.svg\";","module.exports = __webpack_public_path__ + \"static/media/finishOrder.6c1aa4dd.svg\";","import styled from 'styled-components'\n\nexport const ContainerCartProduct = styled.div`\n    background: white;\n    \n    position: relative;\n`\n\nexport const  Empty = styled.div`\n    /* background-color: #ccc; */\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n\n    h6 {\n        font-weight: 600;\n        /* color: red; */\n    }\n\n    p {\n        font-size: .9em;\n    }\n\n    padding: 0 20px 0 20px;\n`\n","import React from 'react'\n\nconst SvgEmptyIcon = props => (\n    <svg width={32}  {...props} viewBox=\"0 0 54 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M51.8889 17.5271H47.3556L32.7778 1.26047C32.6202 1.08538 32.4297 0.943035 32.2171 0.841573C32.0045 0.740111 31.774 0.681517 31.5387 0.669136C31.3035 0.656755 31.0681 0.690829 30.846 0.769414C30.624 0.847998 30.4196 0.969554 30.2445 1.12714C30.0694 1.28473 29.927 1.47526 29.8256 1.68785C29.7241 1.90045 29.6655 2.13095 29.6531 2.36619C29.6407 2.60143 29.6748 2.83681 29.7534 3.05888C29.832 3.28096 29.9535 3.48538 30.1111 3.66047L42.5556 17.616H11.4445L23.8889 3.66047C24.0465 3.48538 24.168 3.28096 24.2466 3.05888C24.3252 2.83681 24.3593 2.60143 24.3469 2.36619C24.3345 2.13095 24.2759 1.90045 24.1745 1.68785C24.073 1.47526 23.9307 1.28473 23.7556 1.12714C23.5805 0.969554 23.3761 0.847998 23.154 0.769414C22.9319 0.690829 22.6965 0.656755 22.4613 0.669136C22.226 0.681517 21.9955 0.740111 21.7829 0.841573C21.5704 0.943035 21.3798 1.08538 21.2222 1.26047L6.73334 17.5271H2.11112C1.63963 17.5271 1.18744 17.7144 0.854043 18.0478C0.520645 18.3812 0.333344 18.8334 0.333344 19.3049C0.333344 19.7764 0.520645 20.2286 0.854043 20.562C1.18744 20.8954 1.63963 21.0827 2.11112 21.0827H51.8889C52.3604 21.0827 52.8126 20.8954 53.146 20.562C53.4794 20.2286 53.6667 19.7764 53.6667 19.3049C53.6667 18.8334 53.4794 18.3812 53.146 18.0478C52.8126 17.7144 52.3604 17.5271 51.8889 17.5271Z\" fill=\"#333333\" />\n        <path d=\"M9.22206 45.9716H44.7776L49.0443 24.6383H5.04428L9.22206 45.9716Z\" fill=\"#333333\" />\n    </svg>\n)\n\n\nexport default SvgEmptyIcon\n\n\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0;\n`\n\n","import styled from \"styled-components\";\n\nexport const ItemList = styled.li`\n    display: flex;\n    padding: 5px 0 5px 0;\n    border-bottom: solid 1px #DDDDDD;\n    position: relative;     \n`\n\nexport const ProductData = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    p {\n        margin-bottom: 0px;\n        font-size: 1em;\n        color: #333333;\n        \n    }\n    span {\n        color: #FF2D55;\n        font-size: 1rem;\n    }\n`\n\nexport const ImageContainer = styled.div`\n    padding: 0 7px 0 7px;      \n`\n\nexport const AddButtonProduct = styled.button`\n    background: #FF8000;\n    border: none;\n    padding: 5px;\n    border-radius: 100%;\n    width: 32px;\n    color: white;\n    :focus {\n        outline: none;\n    }\n`\n\nconst colorOrange = '#FF8000';\nexport const AddRemove = styled.div`\n    display: flex;\n    flex-direction: column; \n    align-items: flex-end;\n    justify-content: center;\n\n    position: absolute;\n    background: rgba(255, 255, 255, 0.9);\n    width: 100%;\n    height: 100%;\n    padding: 0 15px 0 15px;\n\n    section {       \n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        border-radius: 5px;\n        background-color: ${ colorOrange };\n        width: 140px;\n        button {\n            background-color: transparent;\n            border: none;\n            padding: 7px 10px 7px 10px;\n            :focus {\n                outline: none\n            }\n        }\n\n        input {\n            background-color: transparent;\n            border: none;\n            width: 50px;\n            color: white;\n            text-align: center;\n            :focus {\n                outline: none\n            }\n        }\n    }\n`\n\n\n\n\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport {\n    ItemList,\n    ProductData,\n    ImageContainer,\n    AddButtonProduct, AddRemove\n} from \"./style\";\n\nimport AddIcon from '../../../assets/images/AddIcon.svg'\nimport RemoveIcon from '../../../assets/images/RemoveIcon.svg'\nexport class ItemProduct extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        showMiniModal: false,\n        count: 0\n    }\n\n    saveLocalStorage = (productsCount) => {\n        \n        const obj = Object.assign(this.props.product,{\n            productId: this.props.product.id,\n            productsCount\n        })\n\n        localStorage.setItem('productSelected', JSON.stringify(obj))\n\n\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, true);\n    }    \n    componentWillUnmount() {\n\n        document.removeEventListener('click', this.handleClickOutside, true);\n    }    \n    handleClickOutside = event => {\n        \n        const domNode = ReactDOM.findDOMNode(this);\n    \n        if (!domNode || !domNode.contains(event.target)) {\n            this.setState({\n                showMiniModal: false\n            });\n        }\n        \n        \n\n    }    \n\n    handleClickAddRemove = () => {\n        \n        this.props.setProductId(this.props.product.id)\n        const add = parseInt(this.props.countProducts) + 1\n        this.props.setCountProducts(add)\n        this.saveLocalStorage(add)\n    }\n\n    handleFirstAdd = () => {\n        \n        this.props.setProductId(this.props.product.id)\n        this.props.setShowAddProducts(true)\n        const add = parseInt(this.props.countProducts) + 1\n\n        let pCount = this.state.count + 1\n\n        this.setState({\n           showMiniModal: true,\n           count: pCount\n        })\n\n        this.props.setCountProducts(add);\n        this.saveLocalStorage(add)\n    }\n\n    BtnAddDelete = () => {\n\n        return (\n            <div className=\"d-flex flex-column align-items-center\">\n                {\n                    this.state.count == 0 \n                        ? <AddButtonProduct onClick={this.handleFirstAdd} >\n                            <img src={AddIcon} width={18} alt=\"\" />\n                        </AddButtonProduct>\n                        : <AddButtonProduct onClick={() => this.setState({ showMiniModal: true }) } >\n                            {this.props.countProducts}\n                        </AddButtonProduct>\n                }\n                \n                { this.state.count != 0 \n                    ? <small >delete</small>\n                    : null\n                }\n            </div>\n        )\n    }\n\n    handleInputCount = (e) => {\n        let inputCound = (e.target.validity.valid) ? e.target.value : 0;\n        if(e.target.value == '') inputCound = 0\n        this.props.setProductId(this.props.product.id)\n        console.log(inputCound);\n        this.props.setCountProducts(inputCound);\n        if (inputCound == 0 ) {\n            localStorage.removeItem('productSelected')\n            return\n        }\n        this.saveLocalStorage(inputCound)\n    }\n\n    subtract = () => {\n        \n        this.props.setProductId(this.props.product.id)\n        if (this.props.countProducts == 0) {           \n            return\n        }\n\n        let num = parseInt(this.props.countProducts) - 1\n        this.props.setCountProducts(num)\n        this.saveLocalStorage(num)\n        if (num == 0) {\n\n            localStorage.removeItem('productSelected')\n\n            this.setState({\n                count: 0\n            })\n            return\n        }\n        \n    }\n\n    add = () => {\n        \n        this.props.setProductId(this.props.product.id)\n        let num = parseInt(this.props.countProducts) + 1\n        this.props.setCountProducts(num)\n        this.saveLocalStorage(num)\n    }\n\n    addRemoveProducts = () => {\n        return (\n            <AddRemove>\n                <div className=\"d-flex flex-column align-items-center\">\n                    <section >\n                        <button onClick={ this.subtract }>\n                            <img src={RemoveIcon} width={18} alt=\"\" />\n                        </button>\n                        <input type=\"text\" pattern=\"[0-9]*\" onChange={this.handleInputCount} value={this.props.countProducts | 0} />\n                        <button onClick={ this.add } >\n                            <img src={AddIcon} width={18} alt=\"\" />\n                        </button>\n                    </section>\n                    <small className=\"mt-1\" >\n                        delete\n                    </small>\n                </div>\n            </AddRemove>\n        )\n    }\n\n    render() {\n        const product = this.props.product\n\n        return (\n            <ItemList ref='area'>\n                <div className=\"col-3\">\n                    <ImageContainer className=\"row\">\n                        <img src={product.img} width={100 + '%'} height={ 100+'%' } alt=\"\" />\n                    </ImageContainer>\n                </div>\n                <ProductData className=\"col-6\">\n                    <p>{product.name}</p>\n                    <span>${product.price}</span>\n                </ProductData>\n                <div className=\"col-3 d-flex align-items-center\">\n                    { this.BtnAddDelete() }\n                </div>\n                {this.state.showMiniModal ? this.addRemoveProducts() : null}\n\n            </ItemList>\n        )\n    }\n}","import React from 'react'\nimport { List} from \"./style\";\n//components\nimport { ItemProduct } from \"./ItemProduct\";\n\nexport const ListProducts = props => {\n\n    const renderList = () => {\n        return props.products.map( product => {\n            return (\n                <ItemProduct product={ product } key={ product.id }\n                        showAddProducts={ props.showAddProducts } \n                        setShowAddProducts = {props.setShowAddProducts}\n                        countProducts={ props.countProducts }\n                        setCountProducts={ props.setCountProducts }\n                        productId={ props.productId }\n                        setProductId={ props.setProductId }\n                    />\n                ) \n                \n        })\n    }\n\n    return (\n        <div>\n            <List>\n               { renderList() }\n            </List>            \n        </div>\n    )\n}","import React from \"react\";\nimport { Empty, ContainerCartProduct } from \"./styles\";\nimport SvgEmptyLogo from './SvgEmptyLogo'\nimport { ListProducts } from '../ListProducts'\n\n// if the cart is empty\nfunction empty() {\n    return(\n        <Empty>\n            <SvgEmptyLogo className=\"mb-2\" />\n            <h6>Your cart is empty</h6>\n            <p>Seems like you havent shosen what you buy...</p>\n        </Empty>\n    )\n}\n\n// function renderList(props) {\n    \n// }\n\nexport const CartProduct = props => {\n    console.log(props.products);\n    let tempProduct = []\n    if (props.products === undefined) {\n        tempProduct = []\n    } else {\n        tempProduct = props.products\n    }\n    \n    return (\n        <ContainerCartProduct>\n            {   !tempProduct.length    \n                ? empty()\n                : <ListProducts products={ props.products }\n                showAddProducts={ props.showAddProducts } \n                setShowAddProducts = {props.setShowAddProducts}\n                countProducts={ props.countProducts }\n                setCountProducts={ props.setCountProducts }\n                productId={ props.productId }\n                setProductId={ props.setProductId }\n                />\n            }           \n        </ContainerCartProduct>\n    )\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin-bottom: 20px;\n`\n\nexport const SearchInput = styled.input`\n    width: 100%;\n    padding: 12px 16px;\n    border: solid 1px #DDDDDD;\n    border-radius: 5px;\n    \n    :focus {\n        outline: solid 1px #cecece;\n    }\n`","import React from \"react\";\nimport { SearchInput, Container } from \"./style\";\n\nexport const InputSearch = (props) => {\n    \n\n    return (\n        <Container >\n            <SearchInput type=\"text\"\n             onChange={ (e) => props.inputSeachChange(e.target.value) } \n             value={ props.productName } \n              \n             placeholder={ 'search Products' } />\n        </Container>\n    )\n}","import styled, { css } from 'styled-components'\n\nexport const Container = styled.div`\n    background-color: white;\n`\nexport const ListContainer = styled.ul`\n    margin: 0;\n    font-size: 1em;\n    list-style: none;\n    padding: 10px;\n`\nexport const Item = styled.li`\n    padding: 5px;\n    display: flex;\n    justify-content: space-between;\n\n    ${\n    props => props.shippingCost && css`\n        {\n            background: yellow;\n        }\n        `\n    }\n\n    ${\n    props => props.last && css`\n        {\n            margin-top: 10px;\n            font-weight: 600;\n        }\n        `\n    }\n\n    ${\n    props => props.minCost && css`\n        {\n            span {\n                color: #FF2D55\n            }\n        }\n        `\n    }\n\n\n`","import React from 'react'\nimport { Container, ListContainer, Item } from './style'\nexport const CostDelevery = (props) => {\n\n   \n\n    const costs = () => {\n        let product = localStorage.getItem('productSelected')\n        let shipping = \"0.00\",\n            allshipping = \"0.00\",\n            taxes = \"0.00\",\n            total = \"0.00\"\n        \n        if (product) {\n            product = JSON.parse(product)\n\n            shipping = parseFloat(product.price) + ( parseFloat(product.price) * 0.1 )\n            shipping =  product.productsCount ? shipping.toFixed(2): 0.00\n\n            allshipping =  (shipping * product.productsCount).toFixed(2)\n            taxes = (allshipping * 0.18).toFixed(2)\n            total =( parseFloat(allshipping) + parseFloat(taxes) ).toFixed(2)\n            \n\n        }\n\n       \n        return {\n            shipping,\n            allshipping,\n            taxes,\n            total\n        }\n    }\n\n    let { shipping, allshipping, taxes, total } = costs()\n    \n    return (\n        <Container>\n            <ListContainer>\n                <Item>Products <span>${ allshipping }</span> </Item>\n                <Item shippingCost={ false }>Shipping Cost <span>${ shipping || 0.00  }</span> </Item>\n                <Item>Taxes <span>${ taxes }</span> </Item>\n                <Item last minCost>Total <span>${ total }</span> </Item>\n            </ListContainer>\n        </Container>\n    )\n}\n\n","import React from \"react\";\n\nconst SvgCar = props => (\n    <svg width={ 18 } height={ 20 } {...props} viewBox=\"0 0 18 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M11.1967 13.6449C9.44449 13.6449 8.01904 15.0707 8.01904 16.8224C8.01904 18.5746 9.44449 20 11.1967 20C12.9484 20 14.3742 18.5746 14.3742 16.8224C14.3742 15.0707 12.9484 13.6449 11.1967 13.6449ZM11.1967 17.757C10.6812 17.757 10.2621 17.3379 10.2621 16.8224C10.2621 16.3069 10.6812 15.8878 11.1967 15.8878C11.7121 15.8878 12.1312 16.3069 12.1312 16.8224C12.1312 17.3379 11.7121 17.757 11.1967 17.757Z\" fill=\"#0500FF\" />\n        <path d=\"M10.7307 0C11.0184 0.0686127 11.2095 0.162113 11.3041 0.280502L17.4028 7.90928C17.5154 8.04972 17.577 8.22737 17.577 8.41121V16.04C17.577 16.4719 17.2421 16.8224 16.8294 16.8224H16.0373C15.6668 16.8224 15.3393 16.5435 15.2915 16.1593C14.998 13.8066 13.2047 12.3473 11.0354 12.3473C8.86609 12.3473 7.0728 13.8065 6.77935 16.1593C6.73152 16.5435 6.40369 16.8224 6.03358 16.8224H1C0.447715 16.8224 0 16.3747 0 15.8224V1C0 0.447715 0.447715 0 1 0H10.7307ZM5.98832 6.25951C5.98832 6.69183 6.32287 7.04195 6.73598 7.04195L12.8855 7C13.5195 7 13.7911 6.50974 13.3855 6L10.3855 2.5C10.3321 2.43298 10.2483 2.34571 10.1643 2.26289C9.98871 2.08955 9.749 2 9.50225 2H7.17772C6.9869 2 6.79906 2.05322 6.64743 2.16905C6.38406 2.37025 5.99639 2.71483 5.99639 3L5.98832 6.25951Z\" fill=\"#0500FF\" />\n    </svg>\n)\n\nexport default SvgCar\n\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 0px 0 13px 0;\n`\nexport const DeleveryDate = styled.span`\n    font-weight: 600;\n`","import React from 'react'\nimport SvgCar from './SvgCar'\nimport { Container, DeleveryDate } from \"./style\";\nimport Moment from 'react-moment';\n\nexport const DateOrder = () => {\n\n    function getTomorrowDate () {\n        const today = new Date()\n        const tomorrow = new Date(today)\n       return tomorrow.setDate(tomorrow.getDate() + 1)        \n    }\n\n    return (\n        <Container>\n            <SvgCar className=\"mr-2\" />\n            <span>Buy now and get it by </span> &nbsp;\n            <DeleveryDate>\n                <Moment format=\"MM/DD/YY\">\n                    { getTomorrowDate() }\n                </Moment>\n            </DeleveryDate>\n        </Container>\n    )\n}","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button`\n    font-size: .9em;\n    width: 100%;\n    padding: 10px 0 10px 0;\n    background-color: #FF8000;\n    color: white;\n    text-transform: uppercase;\n    border: none;\n    border-radius: 3px;\n    font-weight: 600;\n\n    :focus {\n        outline: none;\n    }\n    :hover {\n        background-color: #ea7600;\n    }\n\n    ${\n    props => props.desebled && css`\n        {\n            background: #F7F7F7 ;\n            border: solid 1px #DDDDDD;\n            color: #C1C1C1;\n            font-weight: 5;\n            cursor: no-drop !important;\n\n            :hover {\n                background-color: #F7F7F7;\n            }   \n        }\n        `\n    }\n`","import React from 'react'\nimport  '../../assets/css/loading.css'\n\n\nexport const Loading = () => (\n    <div className=\"loader\">\n\n    </div>\n)","import React from 'react'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport { navigate } from '@reach/router'\nimport moment from 'moment'\n\nimport { Button } from './style'\nimport { Loading } from '../../components/Loading'\n\nconst ADD_ORDER = gql`\nmutation CreateOrderProduct( $input: OrderProductInput) {\n        createOrderProduct (input: $input) {\n            id,\n            orderProduct,\n            productsCount,\n            productsCost,\n            shippingCost,\n            taxes,\n            total,\n            productId,\n            deleveryDate\n        }\n}\n`\nexport const InputSendOrder =  props => {\n\n    function costs () {\n        let product = localStorage.getItem('productSelected')\n\n        let shippingCost = 0.00\n        let taxes = 0.00\n        let  total = 0.00\n        \n        let productsCount  = 0\n        let productsCost = 0.00\n        let productId = null\n        let deleveryDate = '2019-10-05'\n\n         console.log('ddsds',product);\n         \n        if (product) {              \n\n            product = JSON.parse(product)\n            productsCount  = product.productsCount\n            productId = parseInt(product.productId)\n\n            shippingCost = parseFloat(product.price) + (parseFloat(product.price) * 0.1)\n            shippingCost =  parseFloat(product.productsCount) ? shippingCost.toFixed(2) : 0.00\n\n            productsCost = (shippingCost * parseFloat(product.productsCount)).toFixed(2)\n            taxes = ( productsCost * 0.18 ).toFixed(2);\n            total = ( parseFloat(productsCost) + ( parseFloat(taxes) ) ).toFixed(2)\n        } \n        const returnObj = {\n            \n            productsCount: productsCount,\n            productsCost:  parseFloat(productsCost),\n            shippingCost: parseFloat(shippingCost),            \n            taxes: parseFloat(taxes),\n            total: parseFloat(total),\n            productId: productId,\n            deleveryDate: deleveryDate\n        };\n\n        return returnObj\n\n    }\n\n    const [CreateOrderProduct, { loading } ] = useMutation(ADD_ORDER);\n    let { total } = costs =  costs()\n\n    let disabledBtn = true\n    if (total >= 50) {\n        disabledBtn = false\n    }\n\n    async function handleSendOrder () {\n        if (total <= 50) {\n            return\n        }   \n        try {\n\n            costs.deleveryDate = getTomorrowDate()\n\n            const res = await CreateOrderProduct(\n                { variables:  { input: costs } }\n            )\n            console.log(res.data);\n            \n            localStorage.removeItem('productSelected')\n            return navigate(`/finishOrder/${ res.data.createOrderProduct.orderProduct }`)\n\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const getTomorrowDate = () => {\n        let today = new Date()\n        let tomorrow = new Date(today)\n        tomorrow = tomorrow.setDate(tomorrow.getDate() + 1)        \n        tomorrow = moment(tomorrow).format(\"YYYY-MM-DD\")\n        return tomorrow\n    }\n   \n    return (\n        <div>\n            <Button desebled={disabledBtn} onClick={ handleSendOrder } >\n                Complete order\n            </Button>\n            {  loading ? <Loading />: null }\n        </div>\n    )\n}","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\n//components\nimport { CartProduct } from \"../../components/CartProducts\";\nimport { InputSearch } from '../../components/InputSearch'\nimport { CostDelevery } from '../../components/CostDelevery'\nimport { DateOrder } from '../../components/DateOrder'\nimport { InputSendOrder } from \"../../components/InputSendOrder\";\nimport { Loading } from '../../components/Loading'\n\n\nexport const Home = () => {\n    const [productName, setProductName] = useState('')\n    let [countProducts, setCountProducts] = useState(0)\n    const [showAddProducts, setShowAddProducts] = useState(false)\n    const [productId, setProductId] = useState(null)\n    const [products, setProducts] = useState([])\n\n    let dataProduct = []\n\n    \n    \n\n    const FIND_PRODUCTS = gql`\n        query find_Products($name: String!){\n            findProducts(name: $name) {\n              id\n              name\n              price\n              img\n          }\n        } \n    \n    `\n    let { loading, error, data } = useQuery(FIND_PRODUCTS, { variables: { name: productName } });\n   \n    if (loading == false  ) {\n        dataProduct = data.findProducts\n    }\n\n    let localProduct = localStorage.getItem('productSelected')\n\n\n    if (localProduct) {\n        \n        localProduct = JSON.parse(localProduct)\n        \n        if (localProduct.productCount == 0) {\n            return\n        }\n        \n        dataProduct = [localProduct]\n    }\n\n\n\n    function inputSeachChange(name) {\n        setProductName(name)\n        \n    }\n   \n    \n    \n     \n    if (error) return `Error! ${error.message}`;\n    \n\n    return (\n        <div className=\"container\" >\n            <div className=\"col\" >\n                <div className=\"row mt-5\">\n                    <div className=\"col-6\">\n                        <InputSearch inputSeachChange={inputSeachChange} productName={productName} />\n                    </div>\n                    <div className=\"col-6\"></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        {\n                            !loading \n                            ?\n                            <CartProduct products={dataProduct}\n                                showAddProducts={showAddProducts}\n                                setShowAddProducts={setShowAddProducts}\n                                countProducts={countProducts}\n                                setCountProducts={setCountProducts}\n                                productId={productId}\n                                setProductId={setProductId}\n                            />\n                            : <Loading />\n                        }\n                    </div>\n                    <div className=\"col-6\">\n                        <DateOrder />\n                        <div className=\"mb-3\">\n                            <CostDelevery\n                                countProducts={countProducts}\n                                setCountProducts={setCountProducts}\n                                productId={productId}\n                                setProductId={setProductId}\n                                products={dataProduct}\n                            />\n                        </div>\n                        <InputSendOrder />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { Link } from '@reach/router'\nimport IMG_FINISH_ORDER from '../../assets/images/finishOrder.svg'\n\n\nexport const FinishOrder = (props) => (\n    \n    <div className=\"container pt-5\">\n        <div className=\"col mt-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col col-sm-7 col-md-6 col-lg-5 col-xl-4 d-flex flex-column text-center\">\n                    <h3 className=\"mb-3\">Thank you</h3>\n                    <span className=\"mb-3\">Your order <strong>{ props.order }</strong> has been registered </span>\n                    <Link to=\"/\" replace={ true } >Continue shopping </Link>\n                    <div className=\"mt-4\">\n                        <img src={ IMG_FINISH_ORDER } width={70 + '%'} height={70 + '%'} alt=\"image finish order\"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n)","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n    \n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n    \n    body {\n        background-color: #f7f7f9;\n    }\n`","import React, { Fragment } from 'react';\nimport { Router, Location } from '@reach/router'\nimport posed, { PoseGroup } from 'react-pose';\n\nimport { Home } from \"./pages/Home\";\nimport { FinishOrder } from \"./pages/FinishOrder\"\nimport { GlobalStyle } from './style/GlobalStyled'\n\nconst RouteContainer = posed.div({\n  enter: { opacity: 1, delay: 300, beforeChildren: 300 },\n  exit: { opacity: 0 }\n});\n\n// Animation fadeInOut\nconst PosedRouter = ({ children }) => (\n  <Location>\n    {({ location }) => (\n      <PoseGroup>\n        <RouteContainer key={location.key}>\n          <Router location={location}>{children}</Router>\n        </RouteContainer>\n      </PoseGroup>\n    )}\n  </Location>\n);\n\nconst App = () => {\n  return (\n    <Fragment>\n        <GlobalStyle />\n        <PosedRouter>          \n          <Home path='/' />\n          <FinishOrder path=\"/finishOrder/:order\" />\n        </PosedRouter>   \n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst client = new ApolloClient({\n    // uri: 'http://localhost:5000/graphql'\n    uri: 'https://mysql-database-reto.herokuapp.com/graphql'\n})\n\nReactDOM.render(\n    <ApolloProvider client={ client }>\n        <App />\n    </ApolloProvider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}